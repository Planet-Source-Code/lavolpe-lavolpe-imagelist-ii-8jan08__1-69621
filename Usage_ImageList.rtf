{\rtf1\adeflang1025\ansi\ansicpg1252\uc1\adeff0\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}{\f65\froman\fcharset238\fprq2 Times New Roman CE;}
{\f66\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f68\froman\fcharset161\fprq2 Times New Roman Greek;}{\f69\froman\fcharset162\fprq2 Times New Roman Tur;}{\f70\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\f71\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f72\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f73\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f75\fswiss\fcharset238\fprq2 Arial CE;}
{\f76\fswiss\fcharset204\fprq2 Arial Cyr;}{\f78\fswiss\fcharset161\fprq2 Arial Greek;}{\f79\fswiss\fcharset162\fprq2 Arial Tur;}{\f80\fbidi \fswiss\fcharset177\fprq2 Arial (Hebrew);}{\f81\fbidi \fswiss\fcharset178\fprq2 Arial (Arabic);}
{\f82\fswiss\fcharset186\fprq2 Arial Baltic;}{\f83\fswiss\fcharset163\fprq2 Arial (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;
\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{
\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\*\cs10 \additive \ssemihidden 
Default Paragraph Font;}{\*\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tblind0\tblindtype3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20 \ltrch\fcs0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}}
{\*\latentstyles\lsdstimax156\lsdlockeddef0}{\*\rsidtbl \rsid1721501}{\*\generator Microsoft Word 11.0.8134;}{\info{\operator Keith.Fox}{\creatim\yr2008\mo1\dy8\hr13\min51}{\revtim\yr2008\mo1\dy8\hr13\min57}{\version2}{\edmins6}{\nofpages9}{\nofwords4516}
{\nofchars25747}{\nofcharsws30203}{\vern24611}{\*\password 00000000}}{\*\xmlnstbl {\xmlns1 http://schemas.microsoft.com/office/word/2003/wordml}}\paperw12240\paperh15840\margl720\margr720\margt1440\margb1440\gutter0\ltrsect 
\widowctrl\ftnbj\aenddoc\donotembedsysfont0\donotembedlingdata1\grfdocevents0\validatexml0\showplaceholdtext0\ignoremixedcontent0\saveinvalidxml0\showxmlerrors0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3
\jcompress\viewkind4\viewscale100\rsidroot1721501 \fet0{\*\wgrffmtfilter 013f}\ilfomacatclnup0\ltrpar \sectd \ltrsect\linex0\sectdefaultcl\sectrsid1721501\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2
\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6
\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang 
{\pntxtb (}{\pntxta )}}\pard\plain \ltrpar\qc \li0\ri0\nowidctlpar\tx450\tx1080\tx1620\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \ab\af1\afs20 
\ltrch\fcs0 \b\f1\fs20\ul\insrsid1721501 OVERVIEW OF USER CONTROL AND IMAGE LIST METHODS AND PROPERTIES
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\tx450\tx1080\tx1620\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf15\insrsid1721501 Tip. Best viewed with 8.5 inch page width and 0.5 inch left/right margins}{\rtlch\fcs1 
\ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\ul\insrsid1721501 
\par 
\par Contents}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501  - This document is organized into the following sections
\par 1. General information regarding the image list control
\par 2. Links where you can get Microsof'ts GDI+ graphics library DLL and zLib's compression DLL (Win2K and below)
\par 3. Properties and methods of the image list control
\par 4. Properties and methods of the four individual image list classes
\par 5. Special features offered with the property page
\par 6. Special notes for programmers}{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\ul\insrsid1721501 
\par 
\par General information}{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid1721501 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 1. The user control can support multiple image lists.  Having multiple image lists of the same size is permitted.
\par 2. Each image list is identified by a unique key. Image list keys are required.
\par 3. Each image list is created to hold images at a specific size.  Once created, the size of the images cannot be changed
\par 4. Image lists can be created, destroyed and modified during run time.  During design time, the property page is used.
\par 5. Keys and tags entered during design time are ANSI.  During run-time keys and tags can be unicode.
\par 6. Images within the image list can have keys and tags.  Keys can be numeric but a key cannot duplicate a key of another image within the same image list.  Keys can duplicate keys that exist in other image lists.
\par 7. Numeric keys are treated as ordinal indexes if the variable type passed is not String.  Any key passed as String is treated as a key and not an ordinal index.
\par 8.  Images added to an image list are permanently resized to the image list.  Original image format is not maintained.
\par 9.  The maximum size for a single image list image is approximately 1000x1000. Following are estimates on number of images that can exist within a single image list. The calculation to use is:  (1024000 \\ (Width * Height))
\par \tab - 16x16 images: 4,000, 32x32 images: 1,000, 64x64 images: 250, 128x128 images: 62, 256x256 images: 15
\par 10. GDI+ and zLib, both are free, and should b
e made available on systems older than WinXP.  Those DLLs will support faster image list initialization, faster rendering and faster PNG processing.  TIFFs can only be appended to an image list if GDI+ is available.
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 11. Unlike other image controls, the image list is a single bitmap that can contain hundreds of images. 
 GDI resources used per image list are: 2 bitmaps (1 for the image list and 1 for rendering).  That is about all.  A DC may be created temporarily depending on situations but is not permanently maintained.  C
ompatible for all windows operating systems, however, systems older than Windows2000 will get worse performance; and if GDI+ installed, better performance will be gained.
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\ul\insrsid1721501 References}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 :
\par 1. GDI+ at http://msdn.microsoft.com/library/default.asp?url=/library/en-us/gdicpp/GDIPlus/GDIPlus.asp
\par \tab Supported on WinNT4 with SP6, Win98, WinME, Win2K and higher.  Distributed with WinXP and higher
\par 2. zLib at http://www.zlib.net and is supported on all operating systems. Most recent version is zLib1.dll
\par 
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\ul\insrsid1721501 Properties and Methods of the }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\ul\cf2\insrsid1721501 user control}{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 
\b\f1\fs20\ul\cf1\insrsid1721501  object}{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid1721501 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 The usercontrol is only an IDE design-time interface to the image list classes.  Its only other s
ignificant importance is that it is required for you to persist image lists to your project during design time.  At the very end of this document are the simple steps on creating a usercontrol-less image list for your project, including options of distrib
uting saved image lists without the benefit of this usercontrol's property bag.  
\par A specific ImageLists class can be obtained via UserControl.ImageLists(Key/Index) or UserControl(Key/Index)
\par 
\par The class structure used is very similar to other common controls like the VB ListView, TreeView, ImageList control. The heirarchy is: ImageLists.ImageList.Images.Image which can also be referenced in a variety of ways...
\par \tab -- usercontrol.ImageLists.Item(ListIndex).Images.Item(ImageIndex) 
\par \tab -- usercontrol.ImageLists(ListIndex).Images.Item(ImageIndex) 
\par \tab -- usercontrol.ImageLists(ListIndex).Images(ImageIndex)
\par \tab -- usercontrol(ListIndex).Images(ImageIndex)
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Notes}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 . For an array of usercontrols, then the following examples could be used
\par \tab    usercontrol(ucIndex).ImageLists(ListIndex).Images(ImageIndex)
\par \tab    usercontrol(ucIndex)(ListIndex).Images(ImageIndex)
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 ImageLists}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501  returns and ImageList class which contains individual image data for each image in the list
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 UpdateLists}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501  is used by the property page only, during design-time only.  Calling this at run-time has no effect.
\par 
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\ul\insrsid1721501 Properties and Methods of the }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\ul\cf2\insrsid1721501 IMAGELISTS}{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\ul\insrsid1721501 
 class}{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid1721501 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 The ImageLists (cImageLists) class maintains the collection of individual ImageList classes.  The class has the following properties and methods.  An individual Image
List can be obtained via ImageLists.Item(Index/Key) or ImageLists(Index/Key)
\par -- Parent class: none
\par -- Child class: ImageList (cImageList)
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Add }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 creates a new image list
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Parameters}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab ImageWidth defines the width of each image in the image list
\par \tab ImageHeight defines the height of each image within the image list
\par \tab Key is the key to be associated with the new image list
\par \tab InitImgCount (Optional) is the number of image space to initialize the image list with
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Notes}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab 1. InitImgCount can speed up adding multiple images to the list preventing resizing the image list for each added image
\par \tab 2. During design time, any image list created that has no images will not be saved to the user control
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Clear }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 destroys all image lists contained in the control.
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Compression }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 
returns or sets whether compression will be used when exporting an image list or when the image list is saved in the user control during design time.  The user control will save the image list in PNG format if the system supports GDI+ or has a version 
of zLIB on the system.  If those are not available, then this option will be honored.  
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Notes}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab 1. Compressed image lists require about half of the storage space of uncompressed.  However, compressed image lists take more time to initialize because uncompression must first be performed.
\par \tab 2. Key and tag information for an image list is automatically compressed if the keys and tags require more than 1 KB of uncompressed data.  Compression and uncompression of key and tag data is very fast.
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 CompressionNeeded }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 
retruns True if image list cannot be saved or exported in PNG format else returns false.  If property returns true and CompressImageList is False, then exported/saved image lists are uncompressed.
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Count }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 returns the number of image lists 
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 ExportImageList }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 exports an image list to a byte array. The byte array can be written to a file.
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Parameters}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab Index is the key or its ordinal index of the image list to be exported
\par \tab outData is the array to hold the exported image list.
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Notes}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab 1. If the function returns false, the outData array should be considered null
\par \tab 2. The outData array will always be one-bound when function returns true
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 ImageSizesFromStream}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501  returns the sizes, color depths and number of images contained in the passed stream
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Parameters}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab inStream() is a byte array containing the image(s).  This array is typically acquired through reading a file into the array
\par \tab arraySizes() is a Long array which will contain the image information upon return
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Notes}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab 1. The return value is the number of images located in the passed stream. Zero indicates failure to process the array
\par \tab 2. The arraySizes() Long array will be formatted as follows
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\tx450\tx720\tx1080\tx1620\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 \tab \tab Two dimensional array in the form of:  (0 To 3,  0 To number of images minus one)

\par \tab \tab \tab -- First dimension elements are defined as...
\par \tab \tab \tab -- 0 element: width of the image
\par \tab \tab \tab -- 1 element: height of the image
\par \tab \tab \tab -- 2 element: bit depth of the image. Not applicable if stream did not contain icons or cursors
\par \tab \tab \tab \tab The element values are 1, 2, 4, 8, 16, 24, or 32
\par \tab \tab \tab -- 3 element: color count of the image. Not applicable if stream did not contain icons or cursors
\par \tab \tab \tab \tab The element values are 2, 4, 16, 256, lvil_HIGH_COLOR, lvil_TRUE_COLOR, lvil_TRUE_COLOR_ALPHA
\par \tab 3. The inStream() array can be passed directly to the Image List's }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf1\insrsid1721501 AddImage_fromStream for appending if desired
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\tx450\tx1080\tx1620\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 
\par ImportImageList }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 imports and returns an image list that was previously exported via ExportImageList
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Parameters}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab inData must be a single-dimensioned array containing the exported image list to be imported
\par \tab Key (Optional) is the key that was assigned to the imported image list during the import process.
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Notes}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab 1. If the imported key duplicated a key of an existing image list it will be changed to ensure uniqueness
\par \tab 2. If the function fails the return value is Nothing else it is a ImageList class
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 IsKeyAssigned }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 returns if the passed key is unique among other image lists
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Parameters}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab Key is the key to be compared.
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Notes}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab 1. A return value of greater than zero is the index of the image having that key
\par \tab 2. A return value of zero or less indicates that the passed key is unique
\par \tab 3. A null string is considered unique, but is also an invalid key
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Item }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 returns an ImageList class containing a collection of Images classes
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Parameters}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab Index is the ordinal index or key for the image list.  Ordinal indexes begin at one
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 MaxImages}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501  returns the maximum number of images that will fit on any image list.
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Parameters}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab imageWidth is the width of individual images the image list will hold or does hold
\par \tab imageHeight is the height of individual images the image list will hold or does hold
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Notes}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab 1. The Images class has a similar function that returns the maximum number of images for its list only
\par \tab 2. The formula used is:  1024000 \\ (imageWidth * imageHeight)
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Remove }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 destroys a specific image list
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Parameters}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab Index is the ordinal index or key for the image list to be destroyed.  Ordinal indexes begin at one
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Version }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 returns the current version of the image list classes
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\ul\insrsid1721501 Properties and Methods of the }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\ul\cf2\insrsid1721501 IMAGELIST}{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\ul\insrsid1721501 
 class}{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid1721501 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 The ImageLists (cImageList) class exposes an individual Images class and has the following properties and methods.  
\par -- Parent class is ImageLists (cImageLists)
\par -- Child class: Images (cListImages)
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Height }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 returns the height of the image list images
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Images }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 returns an Images class containing a collection of individual Image classes.
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Parameters. }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 
\par \tab Index is the ordinal index or key of the image.  Ordinal indexes begin at one
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Index }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 returns or sets the ImageList index
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Notes}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab 1. Index must be a valid value between 1 and ImageLists.Count
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Key }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 returns or sets the key for the image list.  All image lists must have keys.  Null keys are not accepted.
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Parameters}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab Index is the ordinal index or key for the image list.  Ordinal indexes begin at one
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 MaxImages}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501  returns the maximum number of images that will fit on this image list.
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Notes}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab 1. The ImageLists class has a similar function that returns the maximum number of images for any class 
\par \tab 2. The formula used is:  1024000 \\ (.Width * .Height)
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 
\par Width }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 returns the width of the image list images
\par 
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\ul\insrsid1721501 Properties and Methods of the }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\ul\cf2\insrsid1721501 IMAGES}{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\ul\insrsid1721501  class}{
\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid1721501 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 
The Images (cListImages) class maintains the collection of individual Image classes and has the following properties and  methods.  An individual Image class can be obtained via .Images.Item(Index/Key) or .Images(Index/Key)
\par -- Parent class is ImageList (cImageList)
\par -- Child class: Image (cListImage)
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 AddImage_fromClipBoard}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501  adds an image copied to the clipboard
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Parameters}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab Index (Optional) is the ordinal index or key of the position to insert image on. Default is at end of list
\par \tab Key (Optional) is the key to be associated with the image. If the key is duplicated, function fails
\par \tab Tag (Optional) is a string to be associated with the image
\par \tab Scaled (Optional) when true the image is scaled to image list width/height else it is stretched
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501  AddImage_fromFile}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501  adds image from file to imagelist and is unicode-friendly
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Parameters}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab FileName is the full path and file name of the image to load
\par \tab Index (Optional) is the ordinal index or key of the position to insert image on. Default is at end of list
\par \tab Key (Optional) is the key to be associated with the image. If the key is duplicated, function fails
\par \tab Tag (Optional) is a string to be associated with the image
\par \tab iconBitDepth (Optional) when the image is an icon, the bit depth of the icon desired
\par \tab Scaled (Optional) when true the image is scaled to image list width/height else it is stretched
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Notes}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab 1.  When file is an icon of multiple resolutions, the icon size chosen is the one closest to the image list size
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 AddImage_fromHandle}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501  adds an image from the passed memory handle
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Parameters}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab Handle is the memory handle of the image
\par \tab Index (Optional) is the ordinal index or key of the position to insert image on. Default is at end of list
\par \tab Key (Optional) is the key to be associated with the image. If the key is duplicated, function fails
\par \tab Tag (Optional) is a string to be associated with the image
\par \tab Scaled (Optional) when true the image is scaled to image list width/height else it is stretched
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Notes}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab 1. When file is an icon of multiple resolutions, the icon size chosen is the one closes to the image list size
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501  AddImage_fromResource}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501  adds image from a compiled resource file
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Parameters}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab ResIndex is the resource index, i.e., 101
\par \tab ResSection is the resource section, i.e., vbResIcon, Custom
\par \tab VBglobal must be passed as VB.Global
\par \tab Index (Optional) is the ordinal index or key of the position to insert image on. Default is at end of list
\par \tab Key (Optional) is the key to be associated with the image. If the key is duplicated, function fails
\par \tab Tag (Optional) is a string to be associated with the image
\par \tab streamStart (Optional) is the offset in the array where the image starts. Default is LBound
\par \tab streamLength (Optional) is the number of bytes for the image. Default is UBound-streamStart +1
\par \tab iconBitDepth (Optional) when the image is an icon, the bit depth of the icon desired
\par \tab Scaled (Optional) when true the image is scaled to image list width/height else it is stretched
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Notes}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab 1. When file is an icon of multiple resolutions, the icon size chosen is the one closest to the image list size
\par \tab 2. When the resource section is not vbResIcon, vbResBitmap then streamStart and streamLength are ignored
\par \tab 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501  AddImage_fromStdPicture}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501  adds image from the passed standard picture object
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Parameters}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab Picture is the standard picture object
\par \tab Index (Optional) is the ordinal index or key of the position to insert image on. Default is at end of list
\par \tab Key (Optional) is the key to be associated with the image. If the key is duplicated, function fails
\par \tab Tag (Optional) is a string to be associated with the image
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501  AddImage_fromStream}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501  adds image from passed array
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Parameters}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab inStream is a one-dimensional byte array containing the image
\par \tab Index (Optional) is the ordinal index or key of the position to insert image on. Default is at end of list
\par \tab Key (Optional) is the key to be associated with the image. If the key is duplicated, function fails
\par \tab Tag (Optional) is a string to be associated with the image
\par \tab streamStart (Optional) is the offset in the array where the image starts. Default is LBound
\par \tab streamLength (Optional) is the number of bytes for the image. Default is UBound-LBound+1
\par \tab iconBitDepth (Optional) when the image is an icon, the bit depth of the icon desired
\par \tab Scaled (Optional) when true the image is scaled to image list width/height else it is stretched
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Notes}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab 1. When file is an icon of multiple resolutions, the icon size chosen is the one closest to the image list size
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Clear }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 removes all images from the Images collection, and erases the image list
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Count }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 returns the number of images maintained by the Images class 
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 DelayLoaded }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 
prevents creation of images until its pixels are first accessed. This option can help reduce system resource usage and do
es not apply to an active image list.  This setting applies to any image list that is eventually imported either during run-time or design-time.  FYI:  Every time a project starts in IDE, the image list control imports your image lists from the form's frx
 file.  Actions that will load a Delay Loaded image lists are rendering, removing, adding, changing indexes.
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 ExtractIcon }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 extracts an image as an icon. See also ExtractIconEx
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Parameters}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab Index is the numerical ordinal or key of the image. Ordinal indexes start at one
\par \tab Rtn_BitDepth (Optional) is the bit depth of the returned icon
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Notes}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab 1. The icon bit depth will be 2, 16 or 256 color paletted icon or true color or alpha blended (XP-style)
\par \tab 2. As a general rule of thumb, the following actions will have the following effect on extracted icons
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\tx450\tx900\tx1620\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 \tab \tab 
- Images that are resized when appended to the image list have blended edges and return XP-style icons
\par \tab \tab - Images that are not resized maintain their original bit depth
\par \tab 3. The icon must be destroyed by you with a call to the DestroyIcon API
\par \tab 4. The returned icon size is always the same size as the image list image
\par \tab 5. WIn2K and below display 32bpp icons very poorly. NT4 is outright horrible
\par \tab 6. If the system fails to create the icon, the return value will be zero
\par 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\tx450\tx1080\tx1620\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 ExtractIconEx }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 
extracts an image as an icon, first rendering the image with custom options
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Parameters}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab Index is the numerical ordinal or key of the image. Ordinal indexes start at one
\par \tab MirrorAxisX (Optional) is True if the image is to be mirrored horizontally
\par \tab MirrorAxisY (Optional) is True if the image is to be mirrored vertically
\par \tab Opacity (Optional) is opacity percentage of rendered image will be. See Render for parameter details
\par \tab grayScale (Optional) is one of several gray scale formulas. See Render for parameter details
\par \tab LightAdjustment (Optional) is percentage of additional lightness/darkness. See Render for parameter details
\par \tab Angle (Optional) is clockwise rotation to render image in degrees. See Render for parameter details
\par \tab Rtn_imageWidth (Optional) is the width of the returned icon. Rotated images may be differently sized
\par \tab Rtn_imageHeight (Optional) is the height of the returned icon. Rotated images may be differently sized
\par \tab Rtn_BitDepth (Optional) is the bit depth of the returned icon
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Notes}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab 1. The icon bit depth will be 2, 16 or 256 color paletted icon or true color or alpha blended (XP-style)
\par \tab 2. As a general rule of thumb, the following actions will have the following effect on extracted icons
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\tx450\tx900\tx1620\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 \tab \tab - Rotated images will have blended edges and return XP-style icons
\par \tab \tab - Images that are resized when appended to the image list have blended edges and return XP-style icons
\par \tab \tab - Images that are not resized maintain their original bit depth
\par \tab 3. The icon must be destroyed by you with a call to the DestroyIcon API
\par \tab 4. WIn2K and below display 32bpp icons very poorly. NT4 is outright horrible
\par \tab 5. If the system fails to create the icon, the return value will be zero
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\tx450\tx1080\tx1620\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 IsKeyAssigned }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 returns if the passed key is unique among other images in the images collection
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Parameters}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab Key is the key to be compared.
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Notes}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab 1. A return value of greater than zero is the index of the image having that key
\par \tab 2. A return value of zero or less indicates that the passed key is unique
\par \tab 3. A null string is considered unique.
\par \tab 4. Duplicate keys are only prevented witthin the same images class
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Item }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 returns an indivdiual Image class
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Parameters}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab Index is the numerical ordinal or key of the image class to be returned
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 
\par MaxImages}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501  returns the maximum number of images that will fit on this image list.
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Notes}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab 1. The ImageLists class has a similar function that returns the maximum number of images for any class 
\par \tab 2. This property is only provided in the class for convenience. It returns the Images.MaxImages property value
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 
\par Remove }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 deletes an image from the images collection
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Parameters}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab Index is the numerical ordinal or key of the image to be removed. Ordinal indexes start at one
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Render }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 draws an image to a destination device context (DC)
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Parameters}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab Index is the numerical ordinal or key of the image to be drawn/rendered. Ordinal indexes start at one
\par \tab destinationDC is the DC to render to
\par \tab destX (Optional) is the left DC coordinate to begin rendering at. Default is zero
\par \tab destY (Optional) is the top DC coordiante to begin rendering at. Default is zero
\par \tab destWidth (Optional) is the width of the rendered image. Default is image's width
\par \tab destHeight (Optional) is the height of the rendered image. Default is image's height
\par \tab srcX (Optional) is the image's left coordinate to render from. Default is zero
\par \tab srcY (Optional) is the image's top coordinate to render from. Default is zero
\par \tab srcWidth (Optional) defines how many source pixels will be rendered. Deault is image's width
\par \tab srcHeight (Optional) defines how many source pixels will be rendered. Default is image's height
\par \tab Opacity (Optional) is opacity percentage of rendered image will be. Default is 100%
\par \tab grayScale (Optional) is one of several gray scale formulas. Default is lvil_gsclNone
\par \tab LightAdjustment (Optional) is percentage of additional lightness/darkness. Default is zero
\par \tab Angle (Optional) is clockwise rotation to render image in degrees. Default is zero degrees.
\par \tab CenterOnDestXY (Optional) determines if image is rendered }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\ul\insrsid1721501 from}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501  or }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 
\f1\fs20\ul\insrsid1721501 centered}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501  on destX, destY
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Notes}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab 1.  Passing negative destWidth,destHeight produces mirrored effects
\par \tab 2.  Opacity ranges from 0% to 100%.  0% is fully transparent, 100% is fully opauqe
\par \tab 3.  Light Adjustment ranges from -100% to 100%.  -100% is pure black, 100% is pure white
\par \tab \tab - negative values make image darker, positive values make image lighter
\par \tab \tab - using 5% to 10% adjustments can create an acceptable hot image
\par \tab \tab - using -10% to -15% adjustments can produce an acceptable disabled image
\par \tab 4. Gray scaling offers eight different formulas
\par \tab \tab - gray scaling can produce an acceptable disabled image
\par \tab 5.  Angle is clockwise, use negative degrees for counter-clockwise rotations
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 RenderRange }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 draws a range of images to a destination device context (DC). This may be
 useful to provide a run-time property page for users. The property page of the user control calls this function to render the image list.
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Parameters}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab StartIndex is the numerical ordinal or key of the first image in the range
\par \tab StopIndex is the numerical ordinal or key of the last image in the range
\par \tab destinationDC is the DC to render to
\par \tab destX is the left DC coordinate to begin rendering at
\par \tab destY is the top DC coordiante to begin rendering at
\par \tab imageWidth is the width of each rendered image
\par \tab imageHeight is the height of the rendered image
\par 
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\ul\insrsid1721501 Properties and Methods of the }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\ul\cf2\insrsid1721501 IMAGE}{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\ul\insrsid1721501  class}{
\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\insrsid1721501 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 The Image (cListImage) class returns or sets individual properties of a single image
\par -- Parent class is Images (cListImages)
\par -- Child class: none
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Height }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 returns the height of the image
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Index }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 returns or sets the image's index in the image list
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Notes}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab 1. Index must be a valid value between 1 and Images.Count
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Key }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 returns or sets the key for the image.
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Notes}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab 1. Key cannot duplicate another image key within the same image list.
\par \tab 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Tag }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 returns or sets the associated Tag (string) with the image
\par \tab }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf11\insrsid1721501 Parameters}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par \tab Index is the numerical ordinal or key of the image to be drawn/rendered. Ordinal indexes start at one
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Width }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 returns the width of the image
\par 
\par 
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\ul\insrsid1721501 Property Page Usage}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .
\par 
\par The property page has some additional features.  The property page is accessed by right clicking on the image list control and selecting Properties from the menu.  It can also be accessed by selecting the image list control and clicking on the ellipsis bu
tton on the property sheet for its Custom property.  The property page is unicode-friendly for file names
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Creating a new image list}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .  From the dropdown box, select or reselect the [New Image List] entry.
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Deleting Images}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 . Select the image you want to delete, then click the X button to the right of the scroll area.
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Deleting an entrire image list}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .  Select the image list from the dropdown box and click the X button located beneath it.
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Deleting all image lists at once}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .  From the Miscellaneous button, choose that option
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Renaming and image list}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .  From the Miscellaneous button, choose that option
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Importing VB ImageList controls}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 
.  From the Import Export button, images within the a VB image list can be imported into this control.  When prompted, select an existin
g VB form or usercontrol file (*.frm or *.ctl).  If a VB ImageList control exists in that file, it will be imported.  The function will import multiple image lists if more than one exists.  Importing this control's image lists from a previously exported i
mage list is also an option.
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Adding new images }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf1\insrsid1721501 is accomplished by clicking the Browse or Paste button}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 
\f1\fs20\insrsid1721501 .  Once one ore more images have been selected, add a key and tag if desired and then click the Append button to add the image(s) to the image list.  Befor
e clicking the Append button, select the image in the scroll area you want to append the new image(s) after.  To cancel the appending action, click the Abort button.  An image list must first exist before any files can be browsed or pasted.
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Multiple image selection}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 
.  Property page supports multiple image files when browsing, pasting, or drag and dropping.  When multiple images are chosen, a set of new controls become visible.  These controls allow navigating between the multiple images.  The mask color, ke
y & tag fields can be used to assign masks, keys and tags to those images before they are appended to the image list.  The ability to custom select an icon size/bit depth if the icon file includes more than one icon is disabled.  In this case, the image l
ist will auto-select the best quality icon and the closest size to the image list.
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Browse for multiple files}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 
.  From the property page, click the Browse button.  When browsing for image files, you can select multiple files.  The browse function is limited i
n the number of files that can be selected.  The restriction is on the total characters of all file names selected.  Pasting multiple files does not have this restriction.  See below.
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Pasting multiple files}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .  From the browse window or from within the Expl
orer window, select multiple files then either press Ctrl+C or right click on a selected file and choose Copy from the menu.  Click the Paste button on the property page.
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Pasting images from the clipboard}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .  Copy the image to the clipboard and press the Paste button on the property page.
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Dragging files to the property page}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 
.  Multiple files can also be dragged and dropped on the property page.  There are two drop zones.  One is the area where selected images are displayed and the other is the area where multiple images are displayed.  Images can be dragged from Explorer.

\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Re-ordering images}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 
 from the property page. Click on the image you want to relocate and drag it either right or left and drop it in the desired position.  To cancel the dragging, simply drag the image out of the scroll area and release the mouse.
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Masking images}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .  When an image has no transparency, you have the option of selecting a color
 to be masked.  That color within the entire image will be made transparent.  This option is only available for images not yet added to the image list and is not available if multiple images have been selected. See Multiple Image Selection above.
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Image list navigation via Keyboard}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 
.  Clicking one of the images in the scroll area of the image list enables keyboard navigation.  Pressing the End key will jump the image list to the last image and pressing the Home key will jump to the first image.
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Checker board colors}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 
.  From the Miscellaenous button, choose to dislay or not display a checker board pattern behind selected images.  This option may reset if the currently selected image list control is changed.
\par 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf2\insrsid1721501 Message box beeps}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 .  From the Miscellaneous button, yo
u can turn off beeps when the property page's message box is displayed.  This option may reset if the currently selected image list control is changed.
\par 
\par 
\par 
\par }{\rtlch\fcs1 \ab\af1\afs20 \ltrch\fcs0 \b\f1\fs20\ul\cf1\insrsid1721501 Special Notes for Programmers}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\cf1\insrsid1721501 
\par }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 
\par 1. The classes used are the entire c32bppDIB suite and not all functions are required and can be removed if you are not using those functions for other purposes.  A list of those functions are provided.
\par  - From c32bppDIB:
\par        BlendToColor , CreateDropShadow, CreateRegion, GetAlphaMask
\par        MakeGrayScale , MakeImageInverse, MirrorImage, PngPropertyGet
\par        PngPropertySet , RenderDropShadow_JIT, SaveToFile, SaveToFile_PNG
\par        SetDIBbits , SetPixel, TrimImage
\par  - From modParsers:
\par        iparseDeleteFile, iparseCreateShapedRegion , local_CreatePartialRegion, local_CreateWin98Region
\par - From cGDIplus
\par \tab SaveToJPG
\par 
\par 2. The property page is not required if you wish to have a run-time only image list control.  If this image list control is actually compiled with and inside of another user}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501  }{\rtlch\fcs1 
\af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 control project, do not include the property page, it will not be available once your usercontrol is compiled. To remove the property page, from the user}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 
\f1\fs20\insrsid1721501  }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 control's property sheet, double click on Property}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501  }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 
\f1\fs20\insrsid1721501 Pages and uncheck any that are checked.
\par 
\par 3. And if you really want to get creative, you can }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\ul\insrsid1721501 just}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 
 include the classes to provide a run-time only, control-less imagelist. This would also prevent the need of shipping and registering an ocx. Required actions:
\par 
\par  - Simply remove the user}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501  }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 control and property page from the project
\par  - Add the classes and and bas module to your project
\par  - Call ImageLists.ManageGDItoken during Form_Load and pass it the form's hWnd
\par  - can safely remove the following functions used only by the property page
\par        cListImages.xcom_Clone, xcom_CloneData, xcom_IsCloned methods, xcom_AddImage_FromDIB, xcom_ImagesDIB
\par  - The remaining xcom_.... properties and methods will become available to you.
\par    Do not call them from within your project. They are for internal
\par    class to class communications only
\par  - VB may change some class instancing properties on you; that is ok
\par 
\par Note: This would prevent you from persisting image lists within your project.  However, you can distribute exported image lists separately or add exported image lists to your project's resource f
ile and import them into the run-time image list during startup.
\par 
\par 4. The enumeration patches are completely optional.  If you choose not to use these}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 :}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid1721501 
\par   - Remove the modIEnum module
\par   - In each class, find and remove each xcom_IEnum function
\par   - The IItemData.ClassDataObject won't be used but does not need to be removed
\par   - The individual IItemData events in the classes do not need to be modified
\par 
\par 5. The cHuffman class can be removed completely if you rework some of the code in the cListImages ImportImageList and ExportImageList functions.
\par }}